# Generated by Django 3.0.4 on 2020-03-09 12:18

import django.core.validators
from django.db import migrations, models
import django.utils.timezone
import unlimited.models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0011_update_proxy_permissions'),
    ]

    operations = [
        migrations.CreateModel(
            name='Salon',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('salon_name', models.CharField(max_length=255, verbose_name='店名')),
                ('salon_email', models.EmailField(max_length=254, unique=True, verbose_name='店舗メール')),
                ('salon_password', models.CharField(max_length=125, verbose_name='パスワード')),
                ('home_page', models.URLField(unique=True, verbose_name='ホームページ')),
                ('salon_phone_num', models.CharField(max_length=15, unique=True, validators=[django.core.validators.RegexValidator(message='電話番号は入力必須です。例:09012345678', regex='^[0-9]+$')], verbose_name='店舗電話番号')),
                ('salon_address', models.CharField(max_length=255, verbose_name='住所')),
                ('business_hours', models.CharField(max_length=255, verbose_name='営業日時')),
                ('cut_prise', models.IntegerField(verbose_name='カット料金')),
            ],
            options={
                'db_table': 'salon',
            },
        ),
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('email', models.EmailField(max_length=254, unique=True, verbose_name='email address')),
                ('first_name', models.CharField(blank=True, max_length=30, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active.Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date_joined')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
            },
            managers=[
                ('objects', unlimited.models.CustomUserManager()),
            ],
        ),
    ]
