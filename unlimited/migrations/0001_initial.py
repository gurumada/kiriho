# Generated by Django 3.0.4 on 2020-05-25 15:09

from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
import unlimited.models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0011_update_proxy_permissions'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('user_name', models.CharField(error_messages={'unique': 'ユーザー名が既に存在しています'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, verbose_name='username')),
                ('email', models.EmailField(max_length=254, unique=True, verbose_name='email address')),
                ('first_name', models.CharField(blank=True, max_length=30, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active.Unselect this instead of deleting accounts.', verbose_name='active')),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date_joined')),
                ('is_user', models.BooleanField(default=True, verbose_name='is User')),
                ('select_plan', models.IntegerField(choices=[(0, 'カットし放題'), (1, 'カラーし放題'), (2, 'カット&カラーし放題')], default=0, verbose_name='選択プラン')),
                ('payment_completion_date', models.DateField(blank=True, default=django.utils.timezone.now, verbose_name='支払い完了日')),
                ('expire_date', models.DateField(blank=True, default=django.utils.timezone.now, verbose_name='有効期限')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
            },
            managers=[
                ('objects', unlimited.models.CustomUserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Salon',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('salon_name', models.CharField(max_length=255, verbose_name='店名')),
                ('salon_email', models.EmailField(max_length=254, unique=True, verbose_name='店舗メール')),
                ('home_page', models.URLField(unique=True, verbose_name='ホームページ')),
                ('salon_phone_num', models.CharField(max_length=15, unique=True, validators=[django.core.validators.RegexValidator(message='電話番号は入力必須です。例:09012345678', regex='^[0-9]+$')], verbose_name='店舗電話番号')),
                ('salon_address', models.CharField(max_length=255, verbose_name='住所')),
                ('business_hours', models.CharField(max_length=255, verbose_name='営業日時')),
                ('cut_prise', models.IntegerField(verbose_name='カット料金')),
                ('color_prise', models.IntegerField(verbose_name='カラー料金')),
                ('mainte_cut_prise', models.IntegerField(default=1500, verbose_name='メンテナンスカット料金')),
                ('mainte_color_prise', models.IntegerField(default=2000, verbose_name='メンテナンスカラー料金')),
                ('salon', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, to=settings.AUTH_USER_MODEL, verbose_name='サロンID')),
            ],
            options={
                'db_table': 'salon',
            },
        ),
        migrations.CreateModel(
            name='Stylist',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('stylist_name', models.CharField(max_length=255, verbose_name='名前')),
                ('affiliation_salon', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='unlimited.Salon', verbose_name='所属サロン')),
            ],
            options={
                'db_table': 'stylist',
            },
        ),
        migrations.CreateModel(
            name='Reservation',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('member', models.CharField(blank=True, max_length=255, null=True, verbose_name='お客様ID')),
                ('plan', models.IntegerField(choices=[(0, 'カットし放題'), (1, 'カラーし放題'), (2, 'カット&カラーし放題')], default=0, verbose_name='選択プラン')),
                ('treatment', models.IntegerField(choices=[(0, 'フルカット'), (1, 'フルカラー'), (2, 'メンテカット'), (3, 'メンテカラー')], default=0, verbose_name='施術')),
                ('add_treat', models.TextField(blank=True, max_length=255, verbose_name='追加施術')),
                ('date', models.DateField(default=django.utils.timezone.localtime, verbose_name='予約日')),
                ('start', models.TimeField(default=django.utils.timezone.localtime, verbose_name='開始時間')),
                ('end', models.TimeField(default=django.utils.timezone.localtime, verbose_name='終了時間')),
                ('remarks', models.TextField(blank=True, max_length=255, verbose_name='備考')),
                ('status', models.IntegerField(blank=True, choices=[(0, '予約完了'), (1, '済'), (2, 'キャンセル'), (3, 'ドタキャン')], default=0, verbose_name='状態')),
                ('salon', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, to='unlimited.Salon', verbose_name='予約サロン')),
                ('stylist', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, to='unlimited.Stylist', verbose_name='指名スタイリスト')),
            ],
            options={
                'db_table': 'Reservation',
            },
        ),
    ]
